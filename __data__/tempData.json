{
  "data": [
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/3/2024, 1:34:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "function setup() {\r\n  createCanvas(128,128);\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n  strokeWeight(4);\r\n  fill(150, 50, 100);\r\n  triangle(12,120,116,120,116,10);\r\n  fill(94, 185, 84);\r\n  triangle(0,108,106,108,106,0);\r\n  fill(255);\r\n  textSize(32);\r\n  textFont(\"serif\");\r\n  text(\"46\", 68, 100);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/3/2024, 1:35:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "function setup() {\r\n  createCanvas(128,128);\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n  strokeWeight(4);\r\n  fill(150, 50, 100);\r\n  triangle(12,120,116,120,116,10);\r\n  fill(94, 185, 84);\r\n  triangle(0,108,106,108,106,0);\r\n  fill(255);\r\n  textSize(32);\r\n  textFont(\"serif\");\r\n  text(\"11\", 68, 100);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:15:26 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(100,100);\r\n  noFill();\r\n  for(let i = 0; i < 10; i++){\r\n    // BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:17:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(100,100);\r\n  noFill();\r\n  for(let i = 0; i < 10; i++){\r\n    ellipse// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:19:25 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    // BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:19:50 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:19:54 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    // BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:22:12 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*10;\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:23:54 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*2;\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:24:01 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*5;\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:24:04 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*10;\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:25:15 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*10\r\n    ;\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:26:17 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup(){\r\n  createCanvas(120,120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width/2,height/2,10,10)\r\n  for(let i = 0; i < 10; i++){\r\n    let d = (i+1)*10;\r\n    if(i<5){stroke(0,0,255);}\r\n    else{stroke(255,0,0);}\r\n    ellipse(width/2,height/2,d,d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:38:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      rect(i,j,10,10)// BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n    }\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:44:27 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n    }\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:45:38 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n    }\r\n  }\r\n}\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:46:25 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(10);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n    }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:46:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n    }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:53:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = width/8\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n      if(((i+j)%2==1)&&(j<3))\r\n        {fill(255,0,0)\r\n         ellipse(x+size/2,y+size/2,d)\r\n        }                \r\n    }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:54:07 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = height/8\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n      if(((i+j)%2==1)&&(j<3))\r\n        {fill(255,0,0)\r\n         ellipse(x+size/2,y+size/2,d)\r\n        }                \r\n    }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:54:17 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = 20\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n      if(((i+j)%2==1)&&(j<3))\r\n        {fill(255,0,0)\r\n         ellipse(x+size/2,y+size/2,d)\r\n        }                \r\n    }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:55:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = 20\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n      if(((i+j)%2==1)&&(j<3))\r\n        {fill(255,0,0)\r\n         ellipse(x+size/2,y+size/2,d)\r\n        }                \r\n      if(((i+j)%2==1)&&(j>4))\r\n      {fill(0,0,255)\r\n       ellipse(x+size/2,y+size/2,d)\r\n      }\r\n      }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:56:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = 20\r\n  noStroke();\r\n  for(let i = 0; i < 8; i++){\r\n    for(let j = 0; j < 8; j++){\r\n      let x =i*size\r\n      let y =j*size\r\n      if ((i+j)%2==1){fill(122);\r\n                      rect(x,y,25,25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n      if(((i+j)%2==1)&&(j<3))\r\n        {fill(255,0,0)\r\n         ellipse(x+size/2,y+size/2,d)\r\n        }                \r\n      if(((i+j)%2==1)&&(j>4))\r\n      {fill(0)\r\n       ellipse(x+size/2,y+size/2,d)\r\n      }\r\n      }\r\n  }\r\n }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 11:59:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  let r = 10\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:01:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  let r = 0\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:01:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  let r = 0\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:02:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  let c= 10\r\n  let r= 10\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:02:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  let c= 10\r\n  let r= 10\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:07:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:07:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:10:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(255,0,0)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:10:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:11:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i+d)%2==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:11:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i+d)%2==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:11:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:11:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:12:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==0)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:12:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  // noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:12:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(0,0,255)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:13:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if((i%2)==1)\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);\r\n  }\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:14:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)}\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:14:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);}\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:14:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);}\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:14:53 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)}\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:15:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/8/2024, 12:16:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:24:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(size,size,size,size)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:24:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0,size,size)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:24:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  let size =d*5\r\n  rect(0,0,size,size)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(white);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(white);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(white);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, );\r\n\r\n  fill(white);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, 0, 0);\r\n\r\n  fill(white);\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:25:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill();\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:26:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill();\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:30:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill();\r\n  rect(3,3,3,3)\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:31:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  // BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:32:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(5,5,5,5)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:32:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0, size/2, size/2)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:33:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0, width, (i+1)*d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:33:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0, width, size)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:33:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0, size, size)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:34:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0,d,d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:34:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(size/2,size/2,width,d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:34:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0,d,d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:36:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,0,3,3)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:36:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,3,10,10)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:37:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,width,width)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:37:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,width,0)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:37:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,10,10)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:38:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,width, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:38:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*3,width, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:39:11 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,width, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:39:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,width, 0)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:39:25 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,width, 10)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:39:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,width, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:39:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,width/2, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:05 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,width,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,width/2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:40:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,size/2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:42:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*3,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:42:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:46:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d*2,0,size,d)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:46:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d*2,0,d,size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:47:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for(let i = 0; i < 9; i++){\r\n    if(i%2==0)\r\n      {fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n    rect(0, i * d, width, (i + 1) * d);}\r\n    else{fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0,d*2,size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d*2,0,d,size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:49:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(red, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:49:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:51:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.7);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:51:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:51:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:52:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:52:41 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawArcs(green,maxR*0.1)\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:52:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawArcs(green,maxR*0.1)\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:52:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawArcs(green,maxR*0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:52:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawArcs(green,maxR*0.2);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:53:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawArcs(green,maxR*0);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:53:41 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawCircle(green,maxR*0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/9/2024, 1:54:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream,black,maxR*0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream,black,maxR*0.45);\r\n  drawCircle(green,maxR*0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r){\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:34:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y -= vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:34:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x -= vx;\r\n  y -= vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:34:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y += vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:39:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y; // ポイント1：関数の外で変数を宣言する\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255); // ポイント2: draw の最初に background を書く\r\n  ellipse(x, y, 30);\r\n  x += 2;\r\n  y -= 2;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:40:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y += vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:41:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "let x, y; // ポイント1：関数の外で変数を宣言する\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255); // ポイント2: draw の最初に background を書く\r\n  ellipse(x, y, 30);\r\n  x += 2;\r\n  y -= 2;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:41:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "let x, y; // ポイント1：関数の外で変数を宣言する\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255); // ポイント2: draw の最初に background を書く\r\n  ellipse(x, y, 30);\r\n  x += 2;\r\n  y += 2;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:41:33 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "let x, y; // ポイント1：関数の外で変数を宣言する\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  //background(160, 192, 255); // ポイント2: draw の最初に background を書く\r\n  ellipse(x, y, 30);\r\n  x += 2;\r\n  y += 2;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:41:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y += vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:41:53 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  //background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y += vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 12:42:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「アニメーションの基本」\r\nlet x, y, vx, vy;\r\nconst g = 1; // 重力加速度\r\nconst vyMax = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vx = 8;\r\n  vy = 8;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 20, 20);\r\n  x += vx;\r\n  y += vy;\r\n\r\n  // 重力（コメント機能でオンオフ切り替えて実行してみましょう）\r\n  vy = constrain(vy + g, -vyMax, vyMax);\r\n\r\n  // 端の処理パターン (1) 反対側から出てくる\r\n  // if(x > width){ x = 0; }\r\n  // else if(x < 0){ x = width; }\r\n  // if(y > height){ y = 0; }\r\n  // if(y < 0){ y = height; }\r\n\r\n　// 端の処理パターン (2) 跳ね返る\r\n  if(x < 0 || x > width){ vx = -1 * vx; }\r\n  if(y > height){ vy = -1 * vy; }\r\n  x = constrain(x, 0, width);\r\n  y = constrain(y, 0, height);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 1:11:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 1:11:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 1:13:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nfunction draw(){\r\n  background(5, 39, 94);\r\n  if(mouseIsPressed){\r\n    ellipse(mouseX, mouseY, 30);\r\n  }\r\n  else{\r\n    ellipse(mouseX, mouseY, 20);\r\n  }\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 1:13:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nfunction draw(){\r\n  background(5, 39, 94);\r\n  if(mouseIsPressed){\r\n    ellipse(mouseX, mouseY, 30);\r\n  }\r\n  else{\r\n    ellipse(mouseX, mouseY, 20);\r\n  }\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/10/2024, 1:15:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 10:51:30 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 10:52:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 10:52:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:01:36 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  size = 5\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:02:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:02:55 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:03:08 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:03:25 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:03:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:06:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count = 100){count = -1*count}\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:08:01 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(cycle = 100){count = -1*count}\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:08:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(cycle = 100){count = (count - 1)%cycle}\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:09:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  \r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, count);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:10:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  size = count\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:17:11 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n\r\n\r\n  size = count\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:22:41 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count < cycle/2){size = count+50;}\r\n  else{size = (cycle-count)+50;}\r\n\r\n  size = count\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:25:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:26:25 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 200;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:26:53 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 5;\r\n  cycle = 200;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:27:14 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + 1) % cycle;\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:31:32 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(MouseIsPressed){\r\n    speed = 3;\r\n  }\r\n  else{speed=1;  \r\n  }\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:32:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(MouseIsPressed){\r\n    speed = 3;\r\n  }\r\n  else{speed=1;  \r\n  }\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:32:33 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(MouseIsPressed){\r\n    speed = 3;\r\n  }\r\n  else{speed=1;  \r\n  }\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:32:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  \r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:34:07 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(KeyIsPressed){speed=3;}\r\n  else{speed=1;}\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:34:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  \r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:35:44 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(mouseIsPressed){speed=3;}\r\n  else{speed=1;}\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:39:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:41:58 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n\r\n  if(x>width){x=0;}\r\n  else if(x<0){x=width;}\r\n  if(y>height){y=0;}\r\n  if(y<0){y=height;\r\n  }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:42:04 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n\r\n  if(x>width){x=0;}\r\n  else if(x<0){x=width;}\r\n  if(y>height){y=0;}\r\n  if(y<0){y=height;}\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 11:47:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y,vx,vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if(keyIsDown(LEFT_ARROW)){ x -= 5; }\r\n  if(keyIsDown(RIGHT_ARROW)){ x += 5; }\r\n  if(keyIsDown(UP_ARROW)){ y -= 5; }\r\n  if(keyIsDown(DOWN_ARROW)){ y += 5; }\r\n  if(keyIsDown(\"D\".charCodeAt(0))){ x+= 10; }\r\n  if(keyIsDown(\"A\".charCodeAt(0))){ x-= 10; }\r\n\r\n  if(x>width){x=0;}\r\n  else if(x<0){x=width;}\r\n  if(y>height){y=0;}\r\n  if(y<0){y=height;}\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:01:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 小手調べ\r\nfunction setup() {\r\n  createCanvas(120, 120);\r\n  background(255);\r\n  noFill();\r\n  ellipse(width / 2, height / 2, 10, 10)\r\n  for (let i = 0; i < 10; i++) {\r\n    let d = (i + 1) * 10;\r\n    if (i < 5) { stroke(0, 0, 255); }\r\n    else { stroke(255, 0, 0); }\r\n    ellipse(width / 2, height / 2, d, d);// BLANK[1]\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:01:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// チェッカー\r\nfunction setup() {\r\n  createCanvas(200, 200);\r\n  let size = width / 8;\r\n  let d = 20\r\n  noStroke();\r\n  for (let i = 0; i < 8; i++) {\r\n    for (let j = 0; j < 8; j++) {\r\n      let x = i * size\r\n      let y = j * size\r\n      if ((i + j) % 2 == 1) {\r\n        fill(122);\r\n        rect(x, y, 25, 25);  // BLANK[1] (hint: rectのx座標は size * i, y座標はsize * j)\r\n        if (((i + j) % 2 == 1) && (j < 3)) {\r\n          fill(255, 0, 0)\r\n          ellipse(x + size / 2, y + size / 2, d)\r\n        }\r\n        if (((i + j) % 2 == 1) && (j > 4)) {\r\n          fill(0)\r\n          ellipse(x + size / 2, y + size / 2, d)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:02:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream, black, maxR * 0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream, black, maxR * 0.45);\r\n  drawCircle(green, maxR * 0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:02:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (i % 2 == 0) {\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n    else {\r\n      fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0, d * 2, size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d * 2, 0, d, size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:02:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:05:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(160, 10, 255);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:06:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(160, 192, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:06:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(0, 200, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:06:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(0, 900, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:07:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(0, 700, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:08:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(0, windowHeight-150, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:08:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  rect(0, windowHeight-50, windowWidth, windowHeight);  \r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:09:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255,0,0);\r\n  rect(0, windowHeight-50, windowWidth, windowHeight);  \r\n\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:09:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255,0,0);\r\n  {rect(0, windowHeight-50, windowWidth, windowHeight);}  \r\n\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:11:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:12:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:12:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:14:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:15:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:15:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:15:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:21:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"Shift\".charCodeAt(0))) && (keyIsDown)(\"D\".charCodeAt(0)) { x += 30; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:22:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"l\".charCodeAt(0)))&&(keyIsDown)(\"D\".charCodeAt(0)) { x += 30; }\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:23:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"l\".charCodeAt(0)))&&(keyIsDown)(\"D\".charCodeAt(0)) { x += 30; })\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:24:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"l\".charCodeAt(0)))&&(keyIsDown)(\"D\".charCodeAt(0)) {x += 30;} )\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:25:35 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"l\".charCodeAt(0)))&&(keyIsDown)(\"D\".charCodeAt(0))){x += 30;}\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:25:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"l\".charCodeAt(0)))&&(keyIsDown)(\"D\".charCodeAt(0))){x += 30;}\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:26:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:27:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"Shift\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:27:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:28:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x += 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:28:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x += 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:29:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(LEFT_ARROW)) { x -= 5; }\r\n  if (keyIsDown(RIGHT_ARROW)) { x += 5; }\r\n  if (keyIsDown(UP_ARROW)) { y -= 5; }\r\n  if (keyIsDown(DOWN_ARROW)) { y += 5; }\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:29:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:30:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  if (y > height) { y = 0; }\r\n  if (y < 0) { y = height; }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 12:30:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  ground = windowHeight-55\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, windowHeight-55, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:22:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight/2;\r\n  ground = windowHeight-55;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y >= ground){\r\n\r\n  }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:22:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = ground/2;\r\n  ground = windowHeight-55;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y >= ground){\r\n\r\n  }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:23:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst vyMax = 20;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y >= ground){\r\n\r\n  }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:25:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y >= ground){\r\n\r\n  }\r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:30:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\nfunction mousePressed(){\r\n  if(y >= ground){\r\n    vy = -jump;\r\n  }\r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n}\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:33:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n\r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:35:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n\r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:36:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\n  function mousePressed(){\r\n    if (y >= ground){\r\n      vy = -jump;\r\n    }\r\n  }\r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:38:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\n  if ((keyIsdown(\" \".charCodeAt(0)))\r\n    if (y >= ground){\r\n      vy = -jump;\r\n    }\r\n  )\r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:38:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:44:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){\r\n  if(y=ground){\r\n    vy = -jump\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/22/2024, 9:44:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(\"L\".charCodeAt(0)))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:01:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:24:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vx, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:26:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight-55;\r\n  ground = windowHeight-55;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:27:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground - size / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, size,size);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:28:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground - size / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:29:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:29:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:29:53 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:29:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-50, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:39:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, y, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:41:22 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, y, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:41:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, y, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:41:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:42:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height / 2;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:43:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight-ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:43:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = windowHeight-ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:45:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:46:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, height-ground, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:46:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = ground;\r\n  }\r\n  \r\nfunction mousePressed(){  //???????????????分からん\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:49:30 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n\r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:52:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\nfunction mousePressed(){\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:52:41 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\nfunction mouseclicked(){\r\n  if(y=ground){\r\n    vy = -jump;\r\n  }\r\n}  \r\n  \r\n  \r\n}\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:55:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\nfunction mousePressed(){\r\n  if(y>=height-ground)\r\n  vy= -jump;\r\n}\r\n}  \r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:57:30 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { vy = - jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:57:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { vy = - jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:58:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { y -= 50;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 1:59:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { y -= 200;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:00:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { vy -= 50;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:00:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147); \r\n  rect(0, windowHeight-ground, windowWidth, windowHeight); \r\n  \r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"D\".charCodeAt(0)))){x += 30;}\r\n  if ((keyIsDown(SHIFT))&&(keyIsDown(\"A\".charCodeAt(0)))){x -= 30;}\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n  \r\n  if(y < ground){\r\n    vy += g;\r\n  }\r\n  else{\r\n    vy = 0;\r\n    y = height-ground;\r\n  }\r\n  \r\n  if(keyIsDown(\" \".charCodeAt(0)))\r\n  { vy = 50;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:02:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  if (y < ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:02:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  if (y < ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:12:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (y < ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:15:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  y += vy;\r\n\r\n  if (y < ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:15:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 50);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/23/2024, 2:19:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:25:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y > ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:26:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < height - ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:26:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:27:05 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:27:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y <= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:27:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y = height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:28:11 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 100;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:29:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n}\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n\r\n  function mousePressed() {\r\n    if (y >= height - ground ) { // on the ground\r\n      vy = -jump;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // イベントハンドラを使用するパターン\r\n  // function keyPressed(){\r\n  //   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n  //   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n  //   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n  //   else if(keyCode == UP_ARROW){ y -= 5; }\r\n  //   else if(key == \"A\"){ x += 10; }\r\n  // }\r\n\r\n  function windowResized() {\r\n    resizeCanvas(windowWidth, windowHeight);\r\n  }\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:33:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\ny += vy;\r\n\r\nif (y < ground) {\r\n  vy += g;\r\n}\r\nelse {\r\n  vy = 0;\r\n  y = height - ground;\r\n}\r\n}\r\n\r\nfunction mousePressed() {\r\n  if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:34:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:34:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:35:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 50;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:35:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:36:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:36:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n // if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:37:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mouseIsCliked() {\r\n // if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:38:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n // if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:39:30 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n // if (y >= height - ground) { // on the ground\r\n    vy = -jump;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:41:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:52:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n  if(key == \"ENTER\")\r\n  if (y >= height - ground){\r\n    vy = -30;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:52:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n  if(key == \"J\")\r\n  if (y >= height - ground){\r\n    vy = -30;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:54:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if(key == \"J\")\r\n  if (y >= height - ground){\r\n    vy = -30;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:54:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 20;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:55:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 30; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 30; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:55:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:56:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyIsDown() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:57:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:58:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 50;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  noStroke();\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 1:59:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 2:03:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet ball = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/28/2024, 2:04:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet ball = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 10:39:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyTyped() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 10:39:34 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyTyped() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 10:40:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 10:40:30 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyIsDown() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 10:41:06 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「キーボード操作に反応する」\r\nlet x, y, vy;\r\nconst g = 1;\r\nconst jump = 30;\r\nconst ground = 55;\r\nconst size = 30;\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  x = width / 2;\r\n  y = height - ground;\r\n  vy = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(242, 212, 147);\r\n  rect(0, windowHeight - ground, windowWidth, windowHeight);\r\n\r\n  fill(255);\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n  y += vy;\r\n\r\n  if (y < height - ground) {\r\n    vy += g;\r\n  }\r\n  else {\r\n    vy = 0;\r\n    y = height - ground;\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if(key == \" \")\r\n  if (y >= height - ground) {  // on the ground\r\n    vy = -jump;\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n// イベントハンドラを使用するパターン\r\n// function keyPressed(){\r\n//   if(keyCode == LEFT_ARROW){ x -= 5; }\r\n//   else if(keyCode == RIGHT_ARROW){ x+= 5; }\r\n//   else if(keyCode == DOWN_ARROW){ y += 5; }\r\n//   else if(keyCode == UP_ARROW){ y -= 5; }\r\n//   else if(key == \"A\"){ x += 10; }\r\n// }\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:09:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (i % 2 == 0) {\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n    else {\r\n      fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0, d * 1, size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d * 2, 0, d, size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:09:15 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (i % 2 == 0) {\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n    else {\r\n      fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0, d * 2, size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d * 2, 0, d, size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:11:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (i % 2 == 0) {\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n    else {\r\n      fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0, d * 2, size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d * 2, d, d, size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:11:40 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ギリシャ国旗\r\nfunction setup() {\r\n  const blue = color(0, 51, 160);\r\n  createCanvas(270, 180);\r\n  noStroke();// noStroke();\r\n  background(255);\r\n\r\n  let d = height / 9; // 縞1本の太さ\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (i % 2 == 0) {\r\n      fill(blue)// BLANK[1] (hint: 縞の色を交互に変えるには2で割った余りを使おう)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n    else {\r\n      fill(255)\r\n      rect(0, i * d, width, (i + 1) * d);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fill(blue);\r\n  let size = d * 5;\r\n  rect(0, 0, size, size);\r\n\r\n  fill(255);\r\n  rect(0, d * 2, size, d)// BLANK[2] (hint: 白い十字を描くには rect を二つ描こう)\r\n  rect(d * 2, 0, d, size)\r\n\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:14:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream, black, maxR * 0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream, black, maxR * 0.95);\r\n  drawCircle(green, maxR * 0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:15:10 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream, black, maxR * 0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream, black, maxR * 0.5);\r\n  drawCircle(green, maxR * 0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:15:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// ダーツ\r\n\r\nfunction setup() {\r\n  const green = color(0, 255, 0);\r\n  const red = color(255, 0, 0);\r\n  const black = color(0);\r\n  const cream = color(242, 212, 147);\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  stroke(255);\r\n  strokeWeight(3);\r\n\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  const maxR = min(width, height); // 大きさは幅と高さのうち小さい方\r\n\r\n  drawCircle(black, maxR);\r\n  drawArcs(green, red, maxR * 0.8);\r\n  drawArcs(cream, black, maxR * 0.75);\r\n  drawArcs(green, red, maxR * 0.5);\r\n  drawArcs(cream, black, maxR * 0.45);\r\n  drawCircle(green, maxR * 0.1);\r\n  // BLANK[1] (hint: drawArcs x 3, drawCircle x 1)\r\n  drawCircle(red, maxR * 0.05);\r\n}\r\n\r\nfunction drawCircle(c, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  fill(c);\r\n  ellipse(cx, cy, r, r);\r\n}\r\n\r\nfunction drawArcs(c1, c2, r) {\r\n  const cx = width / 2; // 中心は (cx, cy)\r\n  const cy = height / 2;\r\n  for (let i = 0; i < 20; i++) {\r\n    let start = TWO_PI / 20 * i;\r\n    let stop = TWO_PI / 20 * (i + 1);\r\n    fill(i % 2 == 0 ? c1 : c2);\r\n    arc(cx, cy, r, r, start, stop, PIE);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:35:21 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(mouseIsPressed){speed=3;}\r\n  else{speed=1;}\r\n\r\n  if(count < cycle/2){size = count+50;}\r\n  else{size = cycle-count+50;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:35:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(mouseIsPressed){speed=3;}\r\n  else{speed=1;}\r\n\r\n  if(count < cycle/2){size = count;}\r\n  else{size = cycle-count+50;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:35:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet speed;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  speed = 1;\r\n}\r\n\r\nfunction windowResized(){\r\n  resezeCanvas(windowWidth,windowHeight);\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  count = (count + speed) % cycle;\r\n  if(mouseIsPressed){speed=3;}\r\n  else{speed=1;}\r\n\r\n  if(count < cycle/2){size = count+50;}\r\n  else{size = cycle-count+50;}\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:40:46 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet s;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction windowResized() {\r\n  resezeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  count = (count + s) % cycle;\r\n  if (mouseIsPressed) { s = 3; }\r\n  else { s = 1; }\r\n\r\n  if (count < cycle / 2) { size = count + 50; }\r\n  else { size = cycle - count + 50; }\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:54:01 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n  \r\n  average = sum / scores.length;\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n\r\n  smallest = 100;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n  \r\n  noStroke();\r\n\r\n  for(let i = 0; i < scores.length; i++){\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:55:46 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n  \r\n  average = sum / scores.length;\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n\r\n  smallest = 100;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n  \r\n  noStroke();\r\n\r\n  for(let i = 0; i < scores.length; i++){\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 11:58:55 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n  \r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n\r\n  smallest = 100;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n  \r\n  noStroke();\r\n\r\n  for(let i = 0; i < scores.length; i++){\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 12:03:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n  \r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for(let i = 0; i < scores.length; i++){\r\n    if(largest < scores[i]){\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n  \r\n  noStroke();\r\n\r\n  for(let i = 0; i < scores.length; i++){\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/29/2024, 12:06:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/30/2024, 10:29:37 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n\r\n    \r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/30/2024, 1:17:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/30/2024, 1:19:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:10:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  text(average.toPrecision(3));\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:11:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  text(average.toPrecision(3), i * dx, height - ah);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:12:33 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  text(average.toPrecision(3), i * dx, height - ah);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:12:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:27:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  text(average.toPrecision(2), i * dx, height - ah);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:28:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  text(average.toPrecision(2), i * dx, height - ah);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:28:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  \r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:30:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(3), i * dx, height - ah);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:30:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(3), 10, height - ah);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:30:35 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(3), 10, height - ah + 5);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:30:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(3), 10, height - ah - 5);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:31:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(2), 10, height - ah - 5);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:31:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n  fill(0);\r\n  text(average.toPrecision(3), 10, height - ah - 5);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:31:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 10, height - ah - 5);\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:31:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 10, height - ah );\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:32:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah );\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:32:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest){\r\n      fill(255,0,0);\r\n    } else if (scores[i] === smallest){\r\n      fill(0,0,255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0,255,0);\r\n  const ah = height * average/100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah );\r\n  \r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:32:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2, height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:51:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, height - h);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:52:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  noStroke();\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, height - h);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:53:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  noStroke();\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, height - h , dx - 4, h);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:53:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  noStroke();\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    ellipse(i * dx, height - h , 1);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:53:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    ellipse(i * dx, height - h , 1);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:54:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    ellipse(i * dx, height - h , 1);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:57:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    circle(i * dx, height - h , 1);\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:58:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, height - h );\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:59:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    strokeWeight(1);\r\n    point(i * dx, height - h );\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:59:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    strokeWeight(1);\r\n    point(i * dx, height - h );\r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 1:59:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    \r\n\r\n\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:00:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:04:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, 10);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:04:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, 10);\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:06:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  const h = height * scores[i] / 100;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    point(i * dx, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:07:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    point(i * dx, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:07:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(3);\r\n    point(i * dx, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:07:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(5);\r\n    point(i * dx, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:08:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(5);\r\n    point(i * dx + 5, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:08:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(5);\r\n    point(i * dx + 10, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:08:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(5);\r\n    point(i * dx + 10, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:08:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(5);\r\n    point(i * dx + 10, height - h );\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:13:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(6);\r\n    point(i * dx + 10, height - h );\r\n\r\n    \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:13:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 10, height - h );\r\n\r\n    \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:14:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 15, height - h );\r\n\r\n    \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:36:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 15, height - h );\r\n\r\n    if (i > 0){\r\n      line(px, py, i * dx + 15, height - h);\r\n    }\r\n\r\n    px = i * dx + 15 ;\r\n    py = height - h;\r\n  \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:37:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 15, height - h );\r\n\r\n    if (i > 0){\r\n      strokeWeight(2)\r\n      line(px, py, i * dx + 15, height - h);\r\n    }\r\n\r\n    px = i * dx + 15 ;\r\n    py = height - h;\r\n  \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:37:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for(let i = 0; i < 10; i++){\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n  \r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for(let i = 0; i < scores.length; i++){\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 15, height - h );\r\n\r\n    if (i > 0){\r\n      strokeWeight(2)\r\n      line(px, py, i * dx + 15, height - h);\r\n    }\r\n\r\n    px = i * dx + 15 ;\r\n    py = height - h;\r\n  \r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "10/31/2024, 2:38:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列を使った描画」練習問題：折れ線グラフ\r\n\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(60, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 横線を引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  // ここからが本番\r\n  fill(0);\r\n  const dx = width / scores.length;\r\n\r\n  let px, py; // 線を引くために一つ前の点を覚えておく変数\r\n  for (let i = 0; i < scores.length; i++) {\r\n    // BLANK[1]\r\n    const h = height * scores[i] / 100;\r\n    strokeWeight(10);\r\n    point(i * dx + 15, height - h);\r\n\r\n    if (i > 0) {\r\n      strokeWeight(2)\r\n      line(px, py, i * dx + 15, height - h);\r\n    }\r\n\r\n    px = i * dx + 15;\r\n    py = height - h;\r\n\r\n  }\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:03:55 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:06:27 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    balls[i] = random(10, 100);\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:06:43 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    balls[i] = random(10, 100);\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:07:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:13:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    b = random(10, 100);\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:18:12 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:25:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  for(let i = 0; i < balls.length; i++){\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged(){\r\n  let s = [];\r\n  for(let j = 0; j < s.length; j++){\r\n    s[j] = random(10, 100);\r\n  }\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if(mag(dx, dy) > 5){\r\n    const b = { x: mouseX, y: mouseY, size: s[j], vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:26:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    let s = [];\r\n    for (let j = 0; j < s.length; j++) {\r\n      s[j] = random(10, 100);\r\n    }\r\n    const b = { x: mouseX, y: mouseY, size: s[j], vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:27:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: s[j], vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:28:37 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: 20, vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:33:01 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10,100), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:33:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "//　テキスト「オブジェクト」\r\n// 練習問題：ボールのサイズをランダムに変更してみよう\r\n// 練習問題：何も操作しなくてもボールが湧いてくる機能を追加しよう\r\n\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10, 100), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:37:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(192);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(cx, cy, r);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:38:38 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(192);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    ellipse(x, y, 10);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:39:10 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(192);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:43:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:44:12 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    nofill();\r\n    star(x, y, 10);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:45:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:45:41 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    noFill();\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:46:37 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    fill(255, 255, 0); \r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:59:04 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  noStroke();\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n  pop();\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:59:19 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  noFill();\r\n  noStroke();\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:59:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  noFill();\r\n  noStroke();\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 11:59:48 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    noFill();\r\n    noStroke();\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:00:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    noFill();\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:00:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:01:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    stroke(0, 255, 255);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:01:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    stroke(255, 255, 0);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:02:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i < 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    stroke(255, 255, 0);\r\n    fill(255, 255 ,0);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:04:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i =< 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    stroke(255, 255, 0);\r\n    fill(255, 255 ,0);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/5/2024, 12:04:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を使う」\r\n// 練習問題：このプログラムを改造してEUの旗を描いてみよう\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  background(0, 0, 255);\r\n  for(let i = 0; i <= 12; i++){\r\n    let theta = TWO_PI * i / 12;\r\n    let x = 100 + cos(theta) * 50;\r\n    let y = 100 + sin(theta) * 50;\r\n    star(x, y, 10);\r\n    stroke(255, 255, 0);\r\n    fill(255, 255 ,0);\r\n\r\n  }\r\n}\r\n\r\n// ヒント：section5-2 にある star 関数をここにコピーして、 draw 内で ellipse の代わりに使おう\r\nfunction star(cx, cy, r){\r\n  beginShape();    // 点つなぎを始める\r\n  for(let i = 0; i < 5; i++){\r\n    const theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    const x = cx + cos(theta) * r;\r\n    const y = cy + sin(theta) * r;\r\n    vertex(x, y);  // 次につなぐ点を１つ増やす\r\n  }\r\n  endShape(CLOSE); // 点つなぎを終わる\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:47:34 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:48:44 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  let n = random(3, 20);\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:49:10 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  let n = random(3, 20);\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:52:05 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(5, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:52:21 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction star(cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:52:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(150, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction star(cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:53:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction star(cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:53:13 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 100);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction star(cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:53:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  star(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction star(cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:54:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  let n = random(3, 20);\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:54:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(5, cx, cy, r){\r\n  let n = random(3, 20);\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:54:49 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:55:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  let n = random(3, 20);\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:55:58 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < random(3, 20); i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:56:21 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(5, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:56:32 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:58:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 10:59:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:00:14 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:00:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:00:42 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / 5 ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:00:53 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:01:15 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:02:54 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:03:11 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:03:42 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(8, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 8; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:04:18 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(20, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 8; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:05:48 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  let n = random(3, 20);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:05:58 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  let n = random(3, 20);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < 5; i++){\r\n    let theta = TWO_PI * i ;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:08:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:09:20 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:09:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(8, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:10:20 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(9, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:10:34 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(10, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:10:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(12, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:11:00 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(3, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:11:11 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(5, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:11:18 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(n, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:12:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:13:51 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI ;//* i * 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:14:09 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i ;//* 2 / 5 - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:17:33 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(5, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:17:43 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(6, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:18:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:18:43 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:18:56 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:19:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:19:11 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:19:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:19:40 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:22:10 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:22:26 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:22:53 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 20), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:23:04 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 10), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:23:47 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 10), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / i - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:23:56 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 10), 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:24:30 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(random(3, 10), 250, 50, 30);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:25:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(6, 250, 50, 30);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:25:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(1) 引数のある関数」\r\n// 練習問題：星を描く関数を改造して正N角形を描画する関数を作ってみよう\r\nfunction setup(){\r\n  createCanvas(300, 100);\r\n  background(200);\r\n  fill(0);\r\n  crossmark(10, 10, 90, 90);\r\n  ngmark(150, 50, 80);\r\n  regularPolygon(6, 250, 50, 40);\r\n}\r\n\r\nfunction crossmark(x1, y1, x2, y2){\r\n  line(x1, y1, x2, y2);\r\n  line(x2, y1, x1, y2);\r\n}\r\n\r\nfunction ngmark(cx, cy, r){\r\n  push();\r\n  noFill();\r\n  strokeWeight(r * 0.1);\r\n  let d = sqrt(r * r / 8);\r\n  ellipse(cx, cy, r);\r\n  line(cx - d, cy - d, cx + d, cy + d);\r\n  pop();\r\n}\r\n\r\nfunction regularPolygon(n, cx, cy, r){\r\n  beginShape();\r\n  for(var i = 0; i < n; i++){\r\n    let theta = TWO_PI * i * 1 / n - HALF_PI;\r\n    let x = cx + cos(theta) * r;\r\n    let y = cy + sin(theta) * r;\r\n    vertex(x,y);\r\n  }\r\n  endShape(CLOSE);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:29:44 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t, w, p){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 2;\r\n  fill(0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:30:20 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\", x, y);\r\n}\r\n\r\nfunction balloon(t, w, p){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 2;\r\n  fill(0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:30:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\", 50, 50);\r\n}\r\n\r\nfunction balloon(t, w, p){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 2;\r\n  fill(0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:31:20 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 2;\r\n  fill(0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:31:55 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 2;\r\n  fill(0, 255, 255);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:32:44 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 255);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:34:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:34:48 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:35:09 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:35:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:35:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(50, 50, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:35:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, 50, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:36:21 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, 50, h + 50);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:36:39 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, 50, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:36:56 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:37:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, p, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:37:42 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(0, 0, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, p, h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:38:23 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:40:15 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(20, 30, 40)\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:40:32 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(20, 20, 30, 30, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:40:54 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(20, 20, 0, 0, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:41:01 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(20, 10, 0, 0, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:41:45 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 50 + h, 0, 0, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:42:13 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 50 + h, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:42:30 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 50, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:43:41 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 + w + p * 2, 50 + h + p * 2, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:44:03 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 + w , 50 + h, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:44:09 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 + w, 50 + h, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:44:38 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 + h, 50 + h, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:44:53 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 , 50 + h, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:45:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50 , 60, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:45:23 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 80, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:45:33 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 10, 60, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:45:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 60, 78, 40, 40,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:46:24 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 65, 78, 40, 85,);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:46:30 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:46:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(0, 255, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:47:23 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(200,200, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(0, 255, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:47:36 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup(){\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t){\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(200,200, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(200, 200, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:47:50 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t) {\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(200, 200, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(200, 200, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:48:36 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\", 20 ,20);\r\n}\r\n\r\nfunction balloon(t, x, y) {\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(200, 200, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(200, 200, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:48:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題：吹き出し\r\n// 吹き出しの位置、背景色 etc. を関数 balloon の引数で指定できるようにしてみよう\r\n// 吹き出しにしっぽを付けてみよう\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(255);\r\n  balloon(\"I love keyakizaka46\");\r\n}\r\n\r\nfunction balloon(t) {\r\n  let w = textWidth(t);\r\n  let h = textAscent() + textDescent();\r\n  let p = 4;\r\n  noStroke();\r\n  fill(200, 200, 0);\r\n  rect(50, 50, w + p * 2, h + p * 2);\r\n  fill(200, 200, 0);\r\n  triangle(50, 78, 65, 78, 40, 85);\r\n  fill(255);\r\n  text(t, 50 + p, 50 + h + p);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:52:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      text(i + \"年は366日です\"); \r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      text(i + \"年は365日です\");\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  // BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 11:56:00 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  // BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/12/2024, 12:02:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y))// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:45:46 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:46:49 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(circleX, circleY, 30, 30);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:49:28 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    console.log(\"366\");\r\n  }\r\n  else{\r\n    console.log(\"365\");\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:54:35 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    console.log(366);\r\n  }\r\n  else{\r\n    console.log(365);\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:55:36 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return 366;\r\n  }\r\n  else{\r\n    return 365;\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:56:26 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return \"366\";\r\n  }\r\n  else{\r\n    return \"365\";\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 10:58:27 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return (366);\r\n  }\r\n  else{\r\n    return (365);\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:00:06 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(i)){\r\n    return (366);\r\n  }\r\n  else{\r\n    return (365);\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:01:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return 366;\r\n  }\r\n  else{\r\n    return 365;\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:13:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return 366;\r\n  }\r\n  else{\r\n    return 365;\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:22:29 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「関数を作る(2) 結果を戻す関数」～「総仕上げ：カレンダーを描画しよう」\r\nfunction setup(){\r\n  createCanvas(200, 200);\r\n  calendar(2019, 10);\r\n\r\n  // isLeapYear の動作確認のため console に出力しています\r\n  for(let i = 2000; i <= 2100; i++){\r\n    if(isLeapYear(i)){\r\n      console.log(i + \"年はうるう年です\");\r\n    }\r\n    else{\r\n      console.log(i + \"年はうるう年ではありません\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction calendar(y, m){\r\n  let dow = dayOfWeek(y, m, 1);\r\n  for(let d = 1; d <= daysInMonth(y, m); d++){\r\n    // BLANK[3] (hint: まずは daysInYear, dayOfWeek を作ろう)\r\n  }\r\n}\r\n\r\nfunction isLeapYear(y){\r\n  return (y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0);\r\n}\r\n\r\nfunction daysInYear(y){\r\n  if (isLeapYear(y)){\r\n    return 366;\r\n  }\r\n  else{\r\n    return 365;\r\n  }// BLANK[1]\r\n}\r\n\r\nfunction daysInMonth(y, m){\r\n  if(m == 2){\r\n    return isLeapYear(y) ? 29 : 28;\r\n  }\r\n  else if(m == 4 || m == 6 || m == 9 || m == 11){\r\n    return 30;\r\n  }\r\n  else{\r\n    return 31;\r\n  }\r\n}\r\n\r\nfunction dayOfYear(y, m, d){\r\n  let count = 0;\r\n  for(let i = 1; i < m; i++){\r\n    count += daysInMonth(y, i);\r\n  }\r\n  return count + d;\r\n}\r\n\r\nfunction dayOfWeek(y, m, d){\r\n  // BLANK[2]\r\n}\r\n\r\nfunction dayOfWeekAsString(dow){\r\n  const a = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\r\n  return a[dow];\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:26:40 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n  let dx = targetX - circleX;\r\n  let dy = targetY - circleY;\r\n\r\n  let distance = dist(circleX, circleY, ,,)\r\n}\r\n\r\nfunction mousePressed(){\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:26:46 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n  let dx = targetX - circleX;\r\n  let dy = targetY - circleY;\r\n\r\n  let distance = dist(circleX, circleY, ,,)\r\n}\r\n\r\nfunction mousePressed(){\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:34:26 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:34:41 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:34:50 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx  , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:35:02 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:37:57 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 ,  h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:38:10 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 ,height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:38:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:38:59 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx , h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:39:08 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:39:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, 10);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:39:32 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:40:22 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(5), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:40:31 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:41:04 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i , height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:41:18 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:41:45 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx,  h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 11:42:05 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// テキスト「配列」～「配列を使った描画」までを収録\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n  background(240);\r\n\r\n  // 配列をランダムに初期化する\r\n  let scores = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\r\n  }\r\n  console.log(scores);\r\n\r\n  // 合計を計算する\r\n  let sum = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    sum += scores[i];\r\n  }\r\n  console.log(sum);\r\n\r\n  // ここから平均・最大・最小を求めます\r\n  let average, largest, smallest;\r\n\r\n  average = sum / scores.length;\r\n  console.log(average);\r\n  // BLANK[1]　平均値（ヒント average = 合計 / 配列の長さ）\r\n\r\n  largest = 0;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (largest < scores[i]) {\r\n      largest = scores[i];\r\n    }\r\n    // BLANK[2]　ヒント：今までの最大値 largest と scores[i] を比較する\r\n  }\r\n  console.log(largest);\r\n\r\n  smallest = 100;\r\n  for (let i = 0; i < scores.length; i++) {\r\n    if (smallest > scores[i]) {\r\n      smallest = scores[i];\r\n    }\r\n    // BLANK[3]　ヒント：最小値とだいたい同じ\r\n  }\r\n  console.log(smallest);\r\n\r\n  // ここから棒グラフを描いていきます。まずは背景に横線をn本引く\r\n  const n = 10;\r\n  for (let i = 0; i < n; i++) { line(0, height * i / n, width, height * i / n); }\r\n\r\n  noStroke();\r\n\r\n  for (let i = 0; i < scores.length; i++) {\r\n    const dx = width / scores.length;\r\n    const h = height * scores[i] / 100;\r\n    // BLANK[4] ヒント: 条件分岐を使って色を変更します\r\n    if (scores[i] === largest) {\r\n      fill(255, 0, 0);\r\n    } else if (scores[i] === smallest) {\r\n      fill(0, 0, 255);\r\n    } else {\r\n      fill(122);\r\n    }\r\n\r\n\r\n    rect(i * dx + 2 , height - h, dx - 4, h);\r\n    fill(0);\r\n    text(scores[i].toPrecision(3), i * dx, height - h);\r\n  }\r\n\r\n  // BLANK[5] 平均点の線を引きます\r\n  stroke(0, 255, 0);\r\n  const ah = height * average / 100\r\n  line(0, height - ah, width, height - ah);\r\n\r\n  fill(0);\r\n  noStroke();\r\n  text(average.toPrecision(3), 0, height - ah);\r\n\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:01:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n  let dx = targetX - circleX;\r\n  let dy = targetY - circleY;\r\n\r\n  let distance = dist(circleX, circleY, targetX, targetY);\r\n  if (distance < speed){\r\n    circleX += (dx / distance)*speed;\r\n    circleY += (dy / distance)*speed;\r\n  }\r\n  else{\r\n    circleX = targetX;\r\n    circleY = targetY;\r\n  }\r\n}\r\n\r\nfunction mousePressed(){\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:03:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet circleX , circleY;\r\nlet targetX , targetY;\r\nlet speed = 2;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n  let dx = targetX - circleX;\r\n  let dy = targetY - circleY;\r\n\r\n  let distance = dist(circleX, circleY, targetX, targetY);\r\n  if (distance < speed){\r\n    circleX += dx;\r\n    circleY += dy;\r\n  }\r\n  else{\r\n    circleX = targetX;\r\n    circleY = targetY;\r\n  }\r\n}\r\n\r\nfunction mousePressed(){\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:05:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  \r\n}\r\n\r\nfunction draw(){\r\n  background(160, 192, 255);\r\n\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:06:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 2;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(220);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:08:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 2;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:09:41 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 4;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mousePressed() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:10:53 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 4;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mouseClicked() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:11:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 4;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = true;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mouseClicked() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/19/2024, 12:11:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 4;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = true;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mouseClicked() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:30:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nconst v = 4;\r\nconst size = 20;\r\n\r\nlet x, y, moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  moving = true;\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n\r\n  ellipse(x, y, size, size);\r\n\r\n  if (moving) {\r\n    let d = dist(mouseX, mouseY, x, y);\r\n\r\n    let vx = ((mouseX - x) / d) * v;\r\n    let vy = ((mouseY - y) / d) * v;\r\n\r\n    x += vx;\r\n    y += vy;\r\n  }\r\n}\r\n\r\nfunction mouseClicked() {\r\n  moving = !moving; // moving が true だったら false になる　逆もまたしかり\r\n} \r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:42:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 1){\r\n      let speed = 5;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:44:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 0){\r\n      let speed = 5;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:48:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(0);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 1){\r\n      let speed = 5;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:50:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 1){\r\n      let speed = 5;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 30, 30);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:50:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 1){\r\n      let speed = 5;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 10, 10);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:52:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 0){\r\n      let speed = 10;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 10, 10);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 1:52:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 1){\r\n      let speed = 10;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 10, 10);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 2:04:33 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let dist = sqrt(dx * dx + dy * dy);\r\n\r\n    if (dist > 0){\r\n      let speed = 3;\r\n      circleX += dx / dist * speed;\r\n      circleY += dy / dist * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 60, 60);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/20/2024, 2:16:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 60, 60);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:12:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving = false;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true; \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:13:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = !moving;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:14:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:15:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else{\r\n      circleX = targetX;\r\n      circleY = targetY;\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:28:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 0){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    if ((circleX = targetX) && (circleY = targetY)){\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:29:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 1){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    if ((circleX = targetX) && (circleY = targetY)){\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:29:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 1){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else if ((circleX = targetX) && (circleY = targetY)){\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:30:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 1){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else ((circleX = targetX) && (circleY = targetY)){\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:30:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\nlet circleX, circleY;\r\nlet targetX, targetY;\r\nlet moving;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  circleX = width / 2;\r\n  circleY = height / 2;\r\n  moving = false;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if(moving){\r\n    let dx = targetX - circleX;\r\n    let dy = targetY - circleY;\r\n    let d = dist(circleX, circleY, targetX, targetY);\r\n\r\n    if (d > 1){\r\n      let speed = 3;\r\n      circleX += dx / d * speed;\r\n      circleY += dy / d * speed;\r\n    }\r\n    else if ((circleX = targetX) && (circleY = targetY)){\r\n      moving = false;\r\n    }\r\n  }\r\n\r\n  ellipse(circleX, circleY, 40, 40);\r\n\r\n}\r\n\r\nfunction mouseClicked() {\r\n  targetX = mouseX;\r\n  targetY = mouseY;\r\n  moving = true;\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:42:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y, size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:46:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y, size;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y += 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y -= 20; }\r\n \r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:47:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y += 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y -= 20; }\r\n \r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:48:04 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n \r\n  if (x > width) { x = 0; }\r\n  else if (x < 0) { x = width; }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:48:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n \r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:49:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n \r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:53:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(SPACE)) && (keyIsDown(\"D\".charCodeAt(0)))) { x + 20; }\r\n  if ((keyIsDown(SPACE)) && (keyIsDown(\"A\".charCodeAt(0)))) { x - 20; }\r\n  if ((keyIsDown(SPACE)) && (keyIsDown(\"W\".charCodeAt(0)))) { y - 20; }\r\n  if ((keyIsDown(SPACE)) && (keyIsDown(\"S\".charCodeAt(0)))) { y + 20; }\r\n\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:54:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"D\".charCodeAt(0)))) { x + 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"A\".charCodeAt(0)))) { x - 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"W\".charCodeAt(0)))) { y - 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"S\".charCodeAt(0)))) { y + 20; }\r\n\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:55:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nconst size = 20;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"D\".charCodeAt(0)))) { x + 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"A\".charCodeAt(0)))) { x - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"W\".charCodeAt(0)))) { y - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"S\".charCodeAt(0)))) { y + 40; }\r\n\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:58:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"D\".charCodeAt(0)))) { x + 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"A\".charCodeAt(0)))) { x - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"W\".charCodeAt(0)))) { y - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"S\".charCodeAt(0)))) { y + 40; }\r\n\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 1:59:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  ellipse(x, y, size);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"D\".charCodeAt(0)))) { x + 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"A\".charCodeAt(0)))) { x - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"W\".charCodeAt(0)))) { y - 40; }\r\n  if ((keyIsDown(ENTER)) && (keyIsDown(\"S\".charCodeAt(0)))) { y + 40; }\r\n\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:04:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 練習問題「心臓の鼓動のように大きくなったり小さくなったりする円」\r\nlet count;\r\nlet cycle;\r\nlet size;\r\nlet s;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction windowResized() {\r\n  resezeCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  count = (count + s) % cycle;\r\n  if (mouseIsPressed) { s = 3; }\r\n  else { s = 1; }\r\n\r\n  if (count < cycle / 2) { size = count + 50; }\r\n  else { size = cycle - count + 50; }\r\n\r\n\r\n  // BLANK[1]\r\n  ellipse(width / 2, height / 2, size);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:06:11 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  count = (count + s) % cycle;\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 20; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:07:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 20; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:07:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 50; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:16:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n    count = 0;\r\n  }\r\n  else { size = 50; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:17:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsPressed(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 50; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:18:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 50; }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:19:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 1;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + s) % cycle;\r\n    if (count < cycle / 2) { size = count + 20; }\r\n    else { size = cycle - count + 20; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:20:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 5;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 5) % cycle;\r\n    if (count < cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:20:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:21:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 100;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count - 3) % cycle;\r\n    if (count > cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:22:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count > cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:22:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:23:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = count + 10; }\r\n    else { size = cycle - count + 10; }\r\n  }\r\n  else { size = 40 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:24:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count + 10; }\r\n    else { size = count + 10; }\r\n  }\r\n  else { size = 40 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:26:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 40 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:27:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 10; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 10; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 20; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 20; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:28:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 5; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 5; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 5; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 10; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (keyIsDown(\" \".charCodeAt(0))){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:29:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 5; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 5; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 5; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 10; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (mouseClicked()){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:30:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 5; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 5; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 5; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 10; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (mousePressed()){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:30:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 5; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 5; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 5; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 10; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (mouseClicked){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/21/2024, 2:30:47 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet x, y;\r\nlet size;\r\nlet count;\r\nlet cycle;\r\nlet s;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = height / 2;\r\n  count = 0;\r\n  cycle = 100;\r\n  s = 3;\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { x += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { x -= 5; }\r\n  if (keyIsDown(\"W\".charCodeAt(0))) { y -= 5; }\r\n  if (keyIsDown(\"S\".charCodeAt(0))) { y += 5; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"D\".charCodeAt(0)))) { x += 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"A\".charCodeAt(0)))) { x -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"W\".charCodeAt(0)))) { y -= 10; }\r\n  if ((keyIsDown(SHIFT)) && (keyIsDown(\"S\".charCodeAt(0)))) { y += 10; }\r\n\r\n  if (x > width) { x = width; }\r\n  else if (x < 0) { x = 0; }\r\n  if (y > height) { y = height; }\r\n  else if (y < 0) { y = 0; }\r\n\r\n  if (mouseIsPressed){\r\n    count = (count + 3) % cycle;\r\n    if (count < cycle / 2) { size = cycle - count - 50; }\r\n    else { size = count - 50; }\r\n  }\r\n  else { size = 50 , count = 0;\r\n  }\r\n\r\n  ellipse(x, y, size);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:22:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10, 100), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:23:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10, 40), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:25:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n    mouseDragged()\r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10, 40), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:26:11 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet balls = [];\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  balls = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let b = balls[i];\r\n    ellipse(b.x, b.y, b.size);\r\n    b.x += b.vx;\r\n    b.y += b.vy;\r\n    \r\n  }\r\n}\r\n\r\nfunction mouseDragged() {\r\n  const dx = mouseX - pmouseX;\r\n  const dy = mouseY - pmouseY;\r\n  if (mag(dx, dy) > 5) {\r\n    const b = { x: mouseX, y: mouseY, size: random(10, 40), vx: dx, vy: dy };\r\n    balls.push(b);\r\n  }\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:33:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:36:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(720, 400);\r\n  fill(192, 192, 192);\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:37:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(192, 192, 192);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:39:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(200, 100, 100);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:39:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(100, 100, 200);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:39:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(200, 80, 200);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:40:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(80, 80, 200);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:40:22 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(50, 100, 200);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:41:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\n\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 6:50:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  snows = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let s = snows[i];\r\n    ellipse(s.x, s.y, s.size);\r\n    s.x += s.vx;\r\n    s.y += s.vy;\r\n }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:06:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  snows = [];\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  for (let i = 0; i < balls.length; i++) {\r\n    let s = snows[i];\r\n    ellipse(s.x, s.y, s.size);\r\n    s.x += s.vx;\r\n    s.y += s.vy;\r\n }\r\n}\r\n\r\nfunction mouseClicked(){\r\n  const s = { x: mouseX, y: mouseY, size: random(10, 100), vx: dx, vy: dy };\r\n  balls.push(s);\r\n}\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:25:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < snows.length; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-innerHeight, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5,)\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:28:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet numSnows = 100;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < numSnows; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-height, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5),\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:29:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < snows.length; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-height, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5),\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:30:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet numSnows = 100;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < numSnows; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-height, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5),\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:30:17 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet numSnows = 100000;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < numSnows; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-height, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5),\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:30:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet numSnows = 200;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  for(let i = 0; i < numSnows; i++){\r\n    snows.push({\r\n      x: random(width),\r\n      y: random(-height, 0),\r\n      size: random(10, 30),\r\n      speed: random(2, 5),\r\n    });\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n  \r\n  for (let snow of snows){\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:36:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(snow.x, snow.y, snow.size);\r\n\r\n    snow.y += snow.speed;\r\n\r\n    if(snow.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 7:37:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:07:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  \r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:12:40 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(width/2, height/2 , 100, 50);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:13:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(width/2, height/2 , 100, 75);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:13:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(width/2, height/2 , 100, 70);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:13:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(width/2, height/2 , 90, 75);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:14:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(width/2, height/2 , 90, 80);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:17:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n\r\n  y = windowHeight - 55;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:18:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 55;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:18:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 70;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:19:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 70;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 60, 50);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:19:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 70;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:19:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:20:53 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 20, y - 30, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:21:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 30, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:21:35 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 50, y - 30, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:21:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 40, y - 30, 20);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:22:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 35, y - 25, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:22:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 30, y - 28, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:23:10 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 30, y - 30, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:23:30 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 27, y - 35, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:23:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 80);\r\n  ellipse(x - 27, y - 35, 15);\r\n  ellipse(x + 27, y - 35, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:24:25 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 35, 15);\r\n  ellipse(x + 27, y - 35, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:24:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:26:24 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:28:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:28:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:28:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  strokeWeight(1);\r\n  fill(255);\r\n  ellipse(x - 20, y - 10, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:29:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  fill(255);\r\n  ellipse(x - 20, y - 10, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:29:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(255);\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:30:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(255);\r\n  strokeWeight(2);\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 2);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:30:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  strokeWeight(2);\r\n  stroke(255);\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 2);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:31:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(255);\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 2);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:31:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(255);\r\n  fill(0);\r\n  ellipse(x - 20, y - 10, 5);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:31:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  fill(255);\r\n  ellipse(x - 20, y - 10, 5);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:32:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 10, 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:32:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:33:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n  ellipse(x + 20, y - 8, 10);\r\n  fill(0);\r\n  ellipse(x - 20, y - 8, 8);\r\n  ellipse(x + 20, y - 8, 8);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:34:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n  ellipse(x + 20, y - 8, 10);\r\n  fill(0);\r\n  ellipse(x - 20, y - 8, 5);\r\n  ellipse(x + 20, y - 8, 5);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:35:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n  ellipse(x + 20, y - 8, 10);\r\n  fill(0);\r\n  ellipse(x - 20, y - 6, 5);\r\n  ellipse(x + 20, y - 6, 5);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:35:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n  ellipse(x + 20, y - 8, 10);\r\n  fill(0);\r\n  ellipse(x - 20, y - 6, 7);\r\n  ellipse(x + 20, y - 6, 7);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:35:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(255);\r\n  ellipse(x - 20, y - 8, 10);\r\n  ellipse(x + 20, y - 8, 10);\r\n  fill(0);\r\n  ellipse(x - 20, y - 7, 7);\r\n  ellipse(x + 20, y - 7, 7);\r\n\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:46:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  noFill();\r\n  curve(100, 0, x - 20, y - 10, x - 10, y - 20, 500, 50);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:46:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  curve(100, 0, x - 20, y - 10, x - 10, y - 20, 500, 50);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:47:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(0);\r\n  curve(100, 0, x - 20, y - 10, x - 10, y - 20, 500, 50);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:48:33 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  line(x - 25, y - 25, x - 20, y - 25);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:48:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke();\r\n  line(x - 25, y - 25, x - 20, y - 25);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:49:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  fill(0);\r\n  line(x - 25, y - 25, x - 20, y - 25);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:50:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(0);\r\n  line(x - 25, y - 25, x - 20, y - 25);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:51:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(1);\r\n  line(x - 25, y - 25, x - 20, y - 25);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:52:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(1);\r\n  line(x - 25, y - 10, x - 20, y - 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:52:35 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:53:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(1);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:53:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(0);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:53:51 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(192);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:54:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(240);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:54:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(250);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:54:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(100);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 10, x - 15, y - 10);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:55:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(100);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:55:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:56:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:57:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n\r\n  line(x - 10, y + 10, x, y + 5);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:58:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n\r\n  line(x - 10, y + 15, x, y + 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:58:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:59:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 8:59:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:11:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-50, 50);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:11:50 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x = random(-50, 50);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:12:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x = random(0, 100);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:12:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(0, 200);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:13:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x = random(0, 200);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:14:49 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(50, 200);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:15:05 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(0, 200);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:18:32 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(15, 5);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:19:33 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(15, 5);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:19:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-5, 5);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:20:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-10, 10);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:23:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-20, 20);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:28:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:31:15 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "function setup() {\r\n  createCanvas(800, 600); // キャンバスサイズ\r\n  noLoop(); // 静止画として描画\r\n}\r\n\r\nfunction draw() {\r\n  background(220); // 背景色を薄いグレーに設定\r\n\r\n  // 傘の位置とサイズ\r\n  let centerX = width / 2; // 傘の中心X座標\r\n  let centerY = height / 2; // 傘の中心Y座標\r\n  let radius = 150; // 傘の半径\r\n  let handleLength = 200; // 傘の持ち手の長さ\r\n\r\n  // 傘のトップ部分（半円形）\r\n  fill(255, 0, 0); // 赤色\r\n  arc(centerX, centerY, radius * 2, radius * 2, PI, TWO_PI, CHORD);\r\n\r\n  // 傘の縁を分割するライン\r\n  let segments = 7; // 傘を分割するセグメント数\r\n  for (let i = 0; i <= segments; i++) {\r\n    let angle = PI * (i / segments); // セグメントの角度\r\n    let x = centerX + cos(angle) * radius;\r\n    let y = centerY - sin(angle) * radius;\r\n    stroke(0);\r\n    line(centerX, centerY, x, y); // 中心から縁までのライン\r\n  }\r\n\r\n  // 傘の持ち手\r\n  stroke(100, 50, 0); // 茶色\r\n  strokeWeight(8); // 持ち手の太さ\r\n  line(centerX, centerY, centerX, centerY + handleLength); // 持ち手の直線\r\n\r\n  // 持ち手の先端を曲げる部分\r\n  noFill();\r\n  stroke(100, 50, 0);\r\n  arc(centerX, centerY + handleLength - 10, 30, 30, 0, HALF_PI);\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:42:00 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:42:27 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 100, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:42:42 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 0, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:43:06 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:43:22 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 0, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:43:34 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:20 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 200, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, -100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:44 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 200, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:46:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 200, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:47:22 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, -100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:47:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 200, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:47:45 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:48:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, HALF_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:48:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:50:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, 100, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:50:54 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, PIE);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:51:03 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:53:01 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, 0, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:53:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 65;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:53:46 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 80;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:53:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:54:13 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 150, 255);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:54:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(150, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:54:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:54:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 150;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:55:02 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 9:59:58 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:00:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke()+\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:00:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:01:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 10; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 10; }\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:03:11 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 5 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1,3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:09:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 1 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:09:38 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:15:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:29:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \");\r\n  x = 0\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:31:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \");\r\n  x += random(-5, 5);\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:33:08 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \"){\r\n  x += random(-5, 5);\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:33:26 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \"){\r\n  x += random(-5, 5)\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:34:36 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \"P\"){\r\n  x += random(-5, 5)\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:34:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \"P\"){\r\n  x += random(-1, 1);\r\n  }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:37:19 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \"P\"){\r\n  s.y += 1;\r\n }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:48:56 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vm;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vm = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  m += vm;\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \"){\r\n  vm = 20;\r\n } \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:50:21 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vm;\r\nlet m, n;\r\nlet ground;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vm = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  m += vm;\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \"){\r\n  vm = 20;\r\n } \r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:55:14 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1;\r\nconst jump = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:55:55 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1;\r\nconst jump = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:56:31 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1;\r\nconst jump = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:56:48 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1;\r\nconst jump = 30;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:57:09 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:57:37 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:58:39 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:58:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:59:16 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 100;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:59:28 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 5;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 10:59:43 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1/2;\r\nconst jump = 10;\r\n\r\nfunction setup(){\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0){\r\n    x = 0\r\n  }\r\n  if (x > width){\r\n    x = width\r\n  }\r\n\r\n  if (m < 0){\r\n    m = 0\r\n  }\r\n  if (m > width){\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100){\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n  \r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n \r\n  if(frameCount % 10 === 0){\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for(let i = snows.length - 1; i >= 0; i--){\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if(s.y > height){\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed(){\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100){\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized(){\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 11:02:57 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1 / 2;\r\nconst jump = 10;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0) {\r\n    x = 0\r\n  }\r\n  if (x > width) {\r\n    x = width\r\n  }\r\n\r\n  if (m < 0) {\r\n    m = 0\r\n  }\r\n  if (m > width) {\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100) {\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n\r\n  if (frameCount % 10 === 0) {\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for (let i = snows.length - 1; i >= 0; i--) {\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if (s.y > height) {\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100) {\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 11:09:29 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1 / 2;\r\nconst jump = 15;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0) {\r\n    x = 0\r\n  }\r\n  if (x > width) {\r\n    x = width\r\n  }\r\n\r\n  if (m < 0) {\r\n    m = 0\r\n  }\r\n  if (m > width) {\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100) {\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n\r\n  if (frameCount % 10 === 0) {\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for (let i = snows.length - 1; i >= 0; i--) {\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if (s.y > height) {\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100) {\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "11/24/2024, 11:11:18 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "sketch.js",
              "content": "// 最終課題を制作しよう\r\nlet snows = [];\r\nlet x, y, vn;\r\nlet m, n;\r\nlet ground;\r\nconst g = 1 / 2;\r\nconst jump = 10;\r\n\r\nfunction setup() {\r\n  createCanvas(windowWidth, windowHeight);\r\n  x = width / 2;\r\n  y = windowHeight - 50;\r\n  m = width / 2;\r\n  n = windowHeight - 125;\r\n  ground = 25;\r\n  vn = 0;\r\n}\r\n\r\nfunction draw() {\r\n  background(160, 192, 255);\r\n\r\n  x += random(-30, 30);\r\n  if (x < 0) {\r\n    x = 0\r\n  }\r\n  if (x > width) {\r\n    x = width\r\n  }\r\n\r\n  if (m < 0) {\r\n    m = 0\r\n  }\r\n  if (m > width) {\r\n    m = width\r\n  }\r\n\r\n  n += vn;\r\n\r\n  if (n < height - ground - 100) {\r\n    vn += g;\r\n  }\r\n  else {\r\n    vn = 0;\r\n    n = height - ground - 100;\r\n  }\r\n\r\n  noStroke();\r\n  fill(100, 100, 200);\r\n  arc(m, n, 100, 100, PI, TWO_PI, CHORD);\r\n\r\n  fill(255);\r\n  rect(0, height - ground, width, height);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(m, n, m, n + 50);\r\n\r\n  noStroke();\r\n  fill(255, 228, 181);\r\n  ellipse(x, y, 90, 75);\r\n  ellipse(x - 27, y - 33, 15);\r\n  ellipse(x + 27, y - 33, 15);\r\n\r\n  stroke(50);\r\n  strokeWeight(2);\r\n  line(x - 25, y - 8, x - 15, y - 8);\r\n  line(x - 25, y - 6, x - 15, y - 6);\r\n  line(x + 25, y - 8, x + 15, y - 8);\r\n  line(x + 25, y - 6, x + 15, y - 6);\r\n  line(x - 10, y + 15, x, y + 10);\r\n  line(x, y + 10, x + 10, y + 15);\r\n\r\n  if (keyIsDown(\"D\".charCodeAt(0))) { m += 5; }\r\n  if (keyIsDown(\"A\".charCodeAt(0))) { m -= 5; }\r\n\r\n  if (frameCount % 10 === 0) {\r\n    snows.push({\r\n      x: random(width),\r\n      y: 0,\r\n      size: random(5, 15),\r\n      speed: random(1, 3),\r\n    });\r\n  }\r\n  for (let i = snows.length - 1; i >= 0; i--) {\r\n    let s = snows[i];\r\n    fill(255);\r\n    noStroke();\r\n    ellipse(s.x, s.y, s.size);\r\n\r\n    s.y += s.speed;\r\n\r\n    if (s.y > height) {\r\n      snows.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction keyPressed() {\r\n  if (key == \" \")\r\n    if (n >= height - ground - 100) {\r\n      vn = -jump;\r\n    }\r\n}\r\n\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "12/10/2024, 10:39:54 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".list-rst__calendar-frame\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "12/10/2024, 10:43:29 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "12/10/2024, 10:48:31 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": ".o365cs-base, .o365sx-appName, .o365sx-button {\r\n    background-color: #5eb954 !important;\r\n  }"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "12/10/2024, 10:53:22 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://outlook.office.com/mail/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "12/17/2024, 11:08:14 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://outlook.office.com/mail/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://developers.google.com/workspace?hl=ja\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "12/17/2024, 11:11:09 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".devsite-landing-row-group\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "1/21/2025, 11:25:42 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://outlook.office.com/mail/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/21/2025, 11:29:52 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed_list\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "1/21/2025, 12:00:46 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://outlook.office.com/mail/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 10:46:57 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 10:56:40 AM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:11:54 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('画像のURL');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:15:59 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "html {\r\n  background-color: #00539f;\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:17:14 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('画像のURL');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:19:23 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:20:23 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": ".jNMkif {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:20:37 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": ".jNMkif {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:22:47 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": ".jNMkif {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg');\r\n  background-size: cover; /* 背景画像を画面いっぱいに表示 */\r\n  background-position: center; /* 背景画像を中央に配置 */\r\n  background-repeat: no-repeat; /* 背景画像を繰り返さない */\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:35:08 AM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Remove Unnecessary Parts from Tabelog etc.\",\r\n    \"version\": \"0.1\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/?hl=ja\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:36:13 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg');\r\n  background-size: cover; /* 背景画像が画面いっぱいに広がる */\r\n  background-position: center; /* 画像の位置を中央に */\r\n  background-repeat: no-repeat; /* 画像が繰り返されないように */\r\n  height: 100vh; /* ビューポートの高さを100%に */\r\n  margin: 0; /* 余白をなくす */\r\n  display: flex;\r\n  justify-content: center; /* 中央に配置 */\r\n  align-items: center; /* 中央に配置 */\r\n  font-family: Arial, sans-serif; /* フォントを指定 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:42:49 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  /* 白背景を削除し、背景画像を設定 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg'); /* 画像のURLを指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 中央に配置 */\r\n  background-repeat: no-repeat; /* 繰り返しを防止 */\r\n  background-attachment: fixed; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:44:26 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  /* 白背景を削除し、背景画像を設定 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 中央に配置 */\r\n  background-repeat: no-repeat; /* 繰り返しを防止 */\r\n  background-attachment: fixed; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:46:03 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  /* 白背景を削除し、背景画像を設定 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 中央に配置 */\r\n  background-repeat: no-repeat; /* 繰り返しを防止 */\r\n  background-attachment: fixed; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:48:50 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 中央に配置 */\r\n  background-repeat: no-repeat; /* 繰り返しを防止 */\r\n  background-attachment: fixed; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:50:06 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat !important; /* 繰り返しを防止 */\r\n  background-attachment: fixed !important; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 11:50:51 AM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat ; /* 繰り返しを防止 */\r\n  background-attachment: fixed ; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 12:00:54 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://tenor.com/ja/view/coach-point-laugh-football-field-gif-4859989') !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat ; /* 繰り返しを防止 */\r\n  background-attachment: fixed ; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 12:04:45 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url(coach-point.gif) !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat ; /* 繰り返しを防止 */\r\n  background-attachment: fixed ; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 12:05:16 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('coach-point.gif') !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat ; /* 繰り返しを防止 */\r\n  background-attachment: fixed ; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "1/28/2025, 12:13:17 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 画像のURLを指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 中央に配置 */\r\n  background-repeat: no-repeat ; /* 繰り返しを防止 */\r\n  background-attachment: fixed ; /* スクロールしても背景固定 */\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:01:05 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"*://www.google.com/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:06:41 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExejJzdGNsc2FmMDNyc2p4dmtzYTh4aGpvejcwMmw5N3B3anR2cGVwMyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/cYZkY9HeKgofpQnOUl/giphy.gif\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:08:00 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExejJzdGNsc2FmMDNyc2p4dmtzYTh4aGpvejcwMmw5N3B3anR2cGVwMyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/cYZkY9HeKgofpQnOUl/giphy.gif\") no-repeat center center fixed;\r\n  background-color: none  !important;\r\n  background-size: cover;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:08:56 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExejJzdGNsc2FmMDNyc2p4dmtzYTh4aGpvejcwMmw5N3B3anR2cGVwMyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/cYZkY9HeKgofpQnOUl/giphy.gif\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:09:29 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:11:03 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/?hl=ja\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:11:35 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"*://www.google.com/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:12:14 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://giphy.com/gifs/moodman-funny-dog-cYZkY9HeKgofpQnOUl\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:14:05 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://giphy.com/gifs/moodman-funny-dog-cYZkY9HeKgofpQnOUlhttps://png.pngtree.com/png-clipart/20201128/ourmid/pngtree-light-effect-aura-png-image_2441310.jpg\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:16:52 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: url(\"https://mdn.github.io/shared-assets/images/examples/balloons.jpg\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:17:40 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url(\"https://mdn.github.io/shared-assets/images/examples/balloons.jpg\") no-repeat center center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:18:16 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url(\"https://mdn.github.io/shared-assets/images/examples/balloons.jpg\") no-repeat center center fixed;\r\n  background-color: transparent !important;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:20:51 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url(\"https://mdn.github.io/shared-assets/images/examples/balloons.jpg\") no-repeat center center fixed;\r\n  background: none !important;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:22:04 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background-image: url(\"https://mdn.github.io/shared-assets/images/examples/balloons.jpg\") no-repeat center center fixed;\r\n  background: none !important;\r\n  background-size: cover;\r\n}\r\n\r\n#logo {\r\n  background: transparent !important;\r\n}\r\n\r\n/* 検索ボックスの背景を半透明にする（オプション）*/\r\ninput.gLFyf {\r\n  background: rgba(255, 255, 255, 0.8) !important;\r\n  border-radius: 8px;\r\n}\r\n\r\nbody {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg'); /* 背景画像を指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:22:11 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg'); /* 背景画像を指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:22:55 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://mdn.github.io/shared-assets/images/examples/balloons.jpg') !important; /* 背景画像を指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:23:15 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/?hl=ja\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:24:12 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  background-size: cover; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:25:08 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:28:07 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"*://www.google.com/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:32:49 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  background-size: cover !important; /* 画面全体に拡大縮小 */\r\n  background-position: center !important; /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:34:52 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n   /* 画面全体に拡大縮小 */\r\n   /* 画像を中央に配置 */\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:37:07 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:38:33 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:39:00 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/\", \"https://www.google.com/?hl=*\"],\r\n        \"css\": [\"mystyle.css\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:40:20 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:46:31 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: contrast(200%);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:47:45 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: sepia(100%);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:52:17 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: sepia(100%) drop-shadow(16px 16px 20px red) invert(75%);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:53:07 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) drop-shadow(16px 16px 20px red) invert(75%);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:54:16 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) drop-shadow(16px 16px 10px black) invert(75%);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:54:58 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(50);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:55:16 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(3);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 7:55:31 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:16:25 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\ntextarea{\r\n  animation-name:slidein;\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:17:26 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\ntextarea{\r\n  animation-name:slidein;\r\n}\r\n@keyframes slidein {\r\n  from {\r\n    margin-left: 100%;\r\n    width: 300%;\r\n  }\r\n\r\n  to {\r\n    margin-left: 0%;\r\n    width: 100%;\r\n  }\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:18:27 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\ntextarea{\r\n  animation-name:slidein !important;\r\n}\r\n@keyframes slidein {\r\n  from {\r\n    margin-left: 100%;\r\n    width: 300%;\r\n  }\r\n\r\n  to {\r\n    margin-left: 0%;\r\n    width: 100%;\r\n  }\r\n}"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:21:14 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/\", \"https://www.google.com/?hl=*\"],\r\n        \"css\": [\"mystyle.css\"],\r\n        \"js\": [\"content.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:22:21 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes textGlow {\r\n  0% { color: #4285F4; text-shadow: 0 0 5px rgba(66, 133, 244, 0.8); }\r\n  25% { color: #EA4335; text-shadow: 0 0 10px rgba(234, 67, 53, 0.8); }\r\n  50% { color: #FBBC05; text-shadow: 0 0 15px rgba(251, 188, 5, 0.8); }\r\n  75% { color: #34A853; text-shadow: 0 0 10px rgba(52, 168, 83, 0.8); }\r\n  100% { color: #4285F4; text-shadow: 0 0 5px rgba(66, 133, 244, 0.8); }\r\n}\r\n\r\n/* アニメーションを適用 */\r\ninput.gLFyf {\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\n.animated-text {\r\n  animation: textGlow 1.5s infinite alternate;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:22:48 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      {\r\n        \"matches\": [\"https://tabelog.com/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://www.google.com/\", \"https://www.google.com/?hl=*\"],\r\n        \"css\": [\"mystyle.css\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:22:52 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  let searchBox = document.querySelector(\"input.gLFyf\"); // Googleの検索ボックス\r\n\r\n  if (searchBox) {\r\n      searchBox.addEventListener(\"input\", function () {\r\n          if (searchBox.value.length > 0) {\r\n              searchBox.classList.add(\"animated-text\");\r\n          } else {\r\n              searchBox.classList.remove(\"animated-text\");\r\n          }\r\n      });\r\n  }\r\n});\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:26:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  let searchBox = document.querySelector(\"input.gLFyf\"); // Googleの検索ボックス\r\n\r\n  if (searchBox) {\r\n      searchBox.addEventListener(\"input\", function () {\r\n          searchBox.classList.remove(\"bounce-animation\"); // 既存のアニメーションをリセット\r\n          void searchBox.offsetWidth; // 強制的に再描画（アニメーションをリスタート）\r\n          searchBox.classList.add(\"bounce-animation\"); // 再度アニメーション適用\r\n      });\r\n  }\r\n});\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:26:35 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes bounceText {\r\n  0% { transform: scale(1); }\r\n  30% { transform: scale(1.2); }\r\n  60% { transform: scale(0.9); }\r\n  100% { transform: scale(1); }\r\n}\r\n\r\n/* 検索ボックスのスタイル */\r\ninput.gLFyf {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n/* 文字が入力されたときにバウンドする */\r\n.bounce-animation {\r\n  animation: bounceText 0.3s ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:30:07 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  function applyAnimation() {\r\n      let searchBox = document.querySelector(\"textarea.YacQv, input.gLFyf\"); // どちらのクラス名でも取得\r\n\r\n      if (searchBox) {\r\n          searchBox.addEventListener(\"input\", function () {\r\n              searchBox.classList.remove(\"bounce-animation\"); // 既存のアニメーションをリセット\r\n              void searchBox.offsetWidth; // 強制的に再描画（アニメーションをリスタート）\r\n              searchBox.classList.add(\"bounce-animation\"); // 再度アニメーション適用\r\n          });\r\n      }\r\n  }\r\n\r\n  // 初回実行\r\n  applyAnimation();\r\n\r\n  // 動的に検索ボックスが変更された場合にも対応\r\n  let observer = new MutationObserver(applyAnimation);\r\n  observer.observe(document.body, { childList: true, subtree: true });\r\n});\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:30:35 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes bounceText {\r\n  0% { transform: scale(1); }\r\n  30% { transform: scale(1.2); }\r\n  60% { transform: scale(0.9); }\r\n  100% { transform: scale(1); }\r\n}\r\n\r\n/* 文字が入力されたときにバウンドする */\r\n.bounce-animation {\r\n  animation: bounceText 0.3s ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:37:12 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:38:07 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes swingLogo {\r\n  0% { transform: rotate(0deg); }\r\n  25% { transform: rotate(5deg); }\r\n  50% { transform: rotate(0deg); }\r\n  75% { transform: rotate(-5deg); }\r\n  100% { transform: rotate(0deg); }\r\n}\r\n\r\n/* Googleロゴのアニメーション */\r\nimg[alt=\"Google\"] {\r\n  animation: swingLogo 1.5s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:46:23 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  let googleLogo = document.querySelector('img[alt=\"Google\"]'); // Googleロゴを取得\r\n\r\n  if (googleLogo) {\r\n      setInterval(() => {\r\n          let randomX = Math.random() * 20 - 10; // -10px 〜 +10px\r\n          let randomY = Math.random() * 20 - 10; // -10px 〜 +10px\r\n          googleLogo.style.transform = `translate(${randomX}px, ${randomY}px)`;\r\n      }, 500); // 0.5秒ごとに移動\r\n  }\r\n});\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:46:32 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:46:59 PM",
          "sources": [
            {
              "fileExtension": "js",
              "filename": "content_script.js",
              "content": "let calendars = document.querySelectorAll(\".newsFeed\");\r\nfor(let i = 0; i < calendars.length; i++){\r\n  let e = calendars[i];\r\n  e.style.display = 'none';\r\n}\r\n\r\n\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:47:03 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes swingLogo {\r\n  0% { transform: rotate(0deg); }\r\n  25% { transform: rotate(5deg); }\r\n  50% { transform: rotate(0deg); }\r\n  75% { transform: rotate(-5deg); }\r\n  100% { transform: rotate(0deg); }\r\n}\r\n\r\n/* Googleロゴのアニメーション */\r\nimg[alt=\"Google\"] {\r\n  animation: swingLogo 1.5s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:48:11 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.2); } /* 20%拡大 */\r\n  100% { transform: scale(1); }\r\n}\r\n\r\n/* Googleロゴに拡大縮小アニメーションを適用 */\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:49:30 PM",
          "sources": [
            {
              "fileExtension": "",
              "filename": "manifest.json",
              "content": "{\r\n    \"name\": \"Sample Chrome Extension\",\r\n    \"description\": \"Google検索画面の背景をGIFに変更する etc.\",\r\n    \"version\": \"1.0\",\r\n    \"manifest_version\": 3,\r\n    \"content_scripts\": [\r\n      \r\n      {\r\n        \"matches\":[\"https://www.google.com/\", \"https://www.google.com/?hl=*\"],\r\n        \"css\": [\"mystyle.css\"],\r\n        \"js\": [\"content_script.js\"]\r\n      },\r\n      {\r\n        \"matches\":[\"https://news.yahoo.co.jp/*\"],\r\n        \"js\": [\"content_script.js\"]\r\n      }\r\n    ]\r\n  }\r\n  "
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:50:05 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important; /* 背景画像を指定 */\r\n  \r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\n/* Googleロゴに拡大縮小アニメーションを適用 */\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:51:22 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important; /* 白背景を削除 */\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\n/* Googleロゴに拡大縮小アニメーションを適用 */\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:52:10 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\ntextarea {\r\n  background: none !important;\r\n  background-color: antiquewhite;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:53:21 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\ntextarea {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:54:25 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:55:31 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  color: black !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:57:17 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border-color: black !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 9:59:29 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 2px solid #4285F4 !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:00:01 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 5px solid #4285F4 !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:00:27 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 5px solid white !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:00:42 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 5px white !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:01:07 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 5px solid #4285F4 !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:01:11 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 2px solid #4285F4 !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:01:15 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.SDkEP {\r\n  background: none !important;\r\n  background-color: antiquewhite !important;\r\n  border: 2px solid #4285F4 !important;  /* 青色の枠線を追加 */\r\n  border-radius: 4px !important;  /* 枠線を丸くする */\r\n  padding: 8px !important;  /* 内側の余白を調整 */\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:03:01 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:05:10 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.o3j99 {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:05:49 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:12:01 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1) blur(2px);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:12:20 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1) blur(1px);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:13:18 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1) saturate(100%);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:13:37 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: hue-rotate(90deg) brightness(1) saturate(150%);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    },
    {
      "dataType": "javascript",
      "bodyData": {
        "document": {
          "savedAt": "2/2/2025, 10:14:26 PM",
          "sources": [
            {
              "fileExtension": "css",
              "filename": "mystyle.css",
              "content": "body {\r\n  background: none !important;\r\n  background-image: url('https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif') !important;\r\n}\r\n\r\n.c93Gbe {\r\n  background: transparent !important;\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  filter: sepia(80%) brightness(1) saturate(150%);\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.5); } \r\n  100% { transform: scale(1); }\r\n}\r\n\r\nimg[alt=\"Google\"] {\r\n  animation: pulseLogo 2s infinite ease-in-out;\r\n}\r\n"
            }
          ]
        }
      }
    }
  ]
}